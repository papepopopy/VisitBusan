
// QueryDsl 설정  1.빌드스크립트 설정  2.관련 라이브러리 추가 및 설정  3.소스 설정 4.컴파일 설정

// 1. QueryDsl 빌드스크립트 설정
buildscript {
	ext {
		queryDslVersion = '5.0.0'
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-security' 		// 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'  	// 타임리프
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'		    // 타임리프 레이아웃

//	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'					// Swagger 문서화

	implementation 'org.springframework.boot:spring-boot-starter-validation' 	// 유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-web'  			// web
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'		// 시큐리티
	compileOnly 'org.projectlombok:lombok'										// lombok
	developmentOnly 'org.springframework.boot:spring-boot-devtools'				// devTools
	runtimeOnly 'com.h2database:h2'												// h2
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'							// mariadb
	annotationProcessor 'org.projectlombok:lombok'								// lombok
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'		// tomcat

	// modelmapper
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:3.2.1'							// modelMapper


	// 썸네일
	// https://mvnrepository.com/artifact/net.coobird/thumbnailator
	implementation 'net.coobird:thumbnailator:0.4.20'
	// CSRF토큰: thymelef에서 인증 관련 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'


	// 테스트 라이브러리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'		// test springBootStarter
	testImplementation 'org.springframework.security:spring-security-test'		// test Security
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'				// test junit
	testAnnotationProcessor 'org.projectlombok:lombok'							// test lombok
	testImplementation 'org.projectlombok:lombok'								// test lombok
	//org.assertj/assertj-core
	testImplementation 'org.assertj:assertj-core:3.26.3'


	// 2. QueryDsl 관련 라이브러리 추가 및 설정
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"		// queryDSL
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
}

tasks.named('test') {
	useJUnitPlatform()
}

// 3. QueryDsl 소스 설정
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

// 4. QueryDsl 컴파일 설정
// 컴파일 하기전에 클린(빌드 파일을 지움)
// QEntity가 존재하는 데 중복 생성하려고 해서 에러
compileJava.dependsOn('clean')
