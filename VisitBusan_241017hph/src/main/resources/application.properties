spring.application.name=VisitBusan

# web 서버 설정
server.port=9089
server.servlet.encoding.charset=UTF-8
#server.servlet.context-path=/


#---------- DB 설정(Mariadb 사용할 경우) -----------
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/visit_busan
spring.datasource.username=java
spring.datasource.password=1234

#SQL은 표준 SQL과 DBMS벤더에서 제공하는 SQL
#JPA 에 SQL 방언을 사용할 수 있게 알려주는 역할
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

#------------ H2 DB 사용할 경우 --------------
#mariaDB설정 대신 이걸 활성화하면 끝! 서버가 테스트용 DB로 돌아감.
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:test
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#h2 콘솔 사용시 시큐리티 설정도 해줘야함(시큐리티 안쓰면 안해도됨)
#spring.h2.console.enabled=true

#-------------db 실행시 로그----------------
# 실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true
# 콘솔 창에 출력되는 쿼리를 가독성 있게 들여쓰기 하여 표시
spring.jpa.properties.hibernate.format_sql=true
#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

#데이터 베이스 초기화 전략 설정
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

# ---------------------------------------------------------  #
#none: 사용하지 않음
#validate: 엔티티와 테이블 정상 매핑 확인

#create: 기존 테이블 삭제 후 테이블 생성
#create-drop: 기존 테이블 삭제 테이블 생성. 종료 시점에 테이블 삭제
#update: 변경된 스키마 적용
# ---------------------------------------------------------  #


#Live Reload기능 활성화
spring.devtools.livereload.enabled = true

# ---------------------------------------------------------  #
# Properties 파일 - Thymeleaf 설정
# ---------------------------------------------------------  #
# Thymeleafcache사용중지
spring.thymeleaf.cache=false
# ---------------------------------------------------------  #
# 생략 가능
#spring.thymeleaf.enabled=true
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
# ---------------------------------------------------------  #

# ---------------------------------------------------------  #
# upload 설정
# ---------------------------------------------------------  #

# 파일업로드 설정 여부
spring.servlet.multipart.enabled=true
# 파일위치
spring.servlet.multipart.location=C:\\javaStudy\\upload
# 최대용량
spring.servlet.multipart.max-request-size=30MB
# 파일당 최대 용량
spring.servlet.multipart.max-file-size=10MB

# 도메인 경로
com.project.VisitBusan.path=C:\\javaStudy\\upload

# 로그 레벨 설정
logging.level.org.springframework=info
logging.level.com.spring.myproject=debug

# security 로그 레벨 설정 (최대한 낮은 레벨 설정: 에러 메시지 표시됨)
logging.level.org.springframework.security=trace
